<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MscThesis.UI.Pages.SetupPage"
             xmlns:vm="clr-namespace:MscThesis.UI.ViewModels"
             xmlns:view="clr-namespace:MscThesis.UI.Views"
             xmlns:behavior="clr-namespace:MscThesis.UI.Behaviors"
             xmlns:conv="clr-namespace:MscThesis.UI.Converters"
             x:DataType="vm:SetupVM"
             >

    <ContentPage.Resources>
        <conv:SingleProblemSizeConverter x:Key="SingleProblemSizeConverter"/>
        <conv:MultipleProblemSizeConverter x:Key="MultipleProblemSizeConverter"/>
        <conv:NotEmptyStringConverter x:Key="NotEmptyStringConverter"/>

        <Style x:Key="TitleLayout" TargetType="HorizontalStackLayout">
            <Setter Property="HorizontalOptions" Value="Center"/>
        </Style>
        <Style x:Key="TitleLabel" TargetType="Label">
            <Setter Property="Margin" Value="10,0,0,5" />
            <Setter Property="FontSize" Value="25"/>
        </Style>
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="VerticalOptions" Value="Center"/>
        </Style>
        <Style x:Key="SubLabelStyle" TargetType="Label">
            <Setter Property="VerticalOptions" Value="Center"/>
        </Style>
        <Style x:Key="EntryStyle" TargetType="Entry">
            <Setter Property="VerticalOptions" Value="Center"/>
        </Style>
        <Style x:Key="SwitchStyle" TargetType="Switch">
            <Setter Property="VerticalOptions" Value="Center"/>
        </Style>
        <Style x:Key="PickerStyle" TargetType="Picker">
            <Setter Property="VerticalOptions" Value="Center"/>
        </Style>
        <Style x:Key="LeftCol" TargetType="HorizontalStackLayout">
            <Setter Property="Margin" Value="10,0,0,5"/>
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="RightCol" TargetType="HorizontalStackLayout">
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="FlowDirection" Value="LeftToRight"/>
        </Style>
        <Style x:Key="AddButton" TargetType="Button">
            <Setter Property="HeightRequest" Value="40"/>
            <Setter Property="WidthRequest" Value="40"/>
            <Setter Property="CornerRadius" Value="20"/>
        </Style>
        <Style x:Key="RemoveButton" TargetType="Button">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="HeightRequest" Value="34"/>
            <Setter Property="WidthRequest" Value="34"/>
            <Setter Property="HorizontalOptions" Value="End"/>
            <Setter Property="CornerRadius" Value="17"/>
        </Style>
        <Style x:Key="Line" TargetType="BoxView">
            <Setter Property="BackgroundColor" Value="White" />
            <Setter Property="Margin" Value="5,5,5,5" />
            <Setter Property="HeightRequest" Value="2" />
            <Setter Property="HorizontalOptions" Value="Fill" />
        </Style>
        <Style x:Key="RunButton" TargetType="Button">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HeightRequest" Value="40"/>
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="HorizontalOptions" Value="End"/>
        </Style>
        <ColumnDefinitionCollection x:Key="ColsDef">
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </ColumnDefinitionCollection>
        <RowDefinitionCollection x:Key="RowDef">
            <RowDefinition Height="Auto"/>
        </RowDefinitionCollection>
    </ContentPage.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Problem setup -->
        <VerticalStackLayout Grid.Row="0" Grid.Column="0" HorizontalOptions="Center">

            <Label Text="Problem" Style="{StaticResource TitleLabel}"/>

            <!-- Problem name -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label Grid.Row="0" Grid.Column="0" 
                       Style="{StaticResource LabelStyle}"
                       Text="Type"/>
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Picker Grid.Row="0" Grid.Column="1"
                        Style="{StaticResource PickerStyle}"
                        ItemsSource="{Binding PossibleProblemNames}" SelectedItem="{Binding ProblemName}">
                        <Picker.Behaviors>
                            <behavior:NameValidator/>
                        </Picker.Behaviors>
                    </Picker>
                </HorizontalStackLayout>
            </Grid>

            <!-- NumRuns -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label Grid.Row="1" Grid.Column="0" Style="{StaticResource LabelStyle}"
                    Text="Number of runs"/>
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Entry Grid.Row="1" Grid.Column="1"
                       Style="{StaticResource EntryStyle}"
                       Text="{Binding NumRuns}">
                        <Entry.Behaviors>
                            <behavior:NumericValidator/>
                        </Entry.Behaviors>
                    </Entry>
                </HorizontalStackLayout>
            </Grid>

            <!-- Parallelization -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label Grid.Row="2" Grid.Column="0" Style="{StaticResource LabelStyle}"
                       Text="Parallelization"/>
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Switch Grid.Row="2" Grid.Column="1"
                        Style="{StaticResource SwitchStyle}"
                        IsToggled="{Binding ParallelizationEnabled}"/>
                </HorizontalStackLayout>
            </Grid>

            <!-- NumThreads -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}"
                  IsVisible="{Binding ParallelizationEnabled}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label Grid.Row="3" Grid.Column="0"
                       Style="{StaticResource LabelStyle}"
                       Text="#Threads"
                       />
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Entry Grid.Row="3" Grid.Column="1" 
                       Style="{StaticResource EntryStyle}"
                       Text="{Binding MaxParallelization}"/>
                </HorizontalStackLayout>
            </Grid>

            <!-- Multiple sizes -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}"
                  IsVisible="{Binding CustomProblemSizesAllowed}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label Grid.Row="4" Grid.Column="0" 
                           Style="{StaticResource LabelStyle}"
                           Text="Multiple sizes"
                       />
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Switch Grid.Row="4" Grid.Column="1" 
                            Style="{StaticResource SwitchStyle}"
                            IsToggled="{Binding MultipleSizes}"/>
                </HorizontalStackLayout>
            </Grid>

            <!-- Problem size start -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}"
                  IsVisible="{Binding CustomProblemSizesAllowed}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label
                       Style="{StaticResource LabelStyle}"
                       Text="Problem size">
                        <Label.IsVisible>
                            <MultiBinding Converter="{StaticResource SingleProblemSizeConverter}">
                                <Binding Path="CustomProblemSizesAllowed"/>
                                <Binding Path="MultipleSizes"/>
                            </MultiBinding>
                        </Label.IsVisible>
                    </Label>
                    <Label
                       Style="{StaticResource LabelStyle}"
                       Text="Problem size start">
                        <Label.IsVisible>
                            <MultiBinding Converter="{StaticResource MultipleProblemSizeConverter}">
                                <Binding Path="CustomProblemSizesAllowed"/>
                                <Binding Path="MultipleSizes"/>
                            </MultiBinding>
                        </Label.IsVisible>
                    </Label>
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Entry
                       Style="{StaticResource EntryStyle}"
                       Text="{Binding ProblemSizeStart}"/>
                </HorizontalStackLayout>
            </Grid>

            <!-- Problem size stop -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}"
                  IsVisible="{Binding CustomProblemSizesAllowed}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label Grid.Row="6" Grid.Column="0"
                       Style="{StaticResource LabelStyle}"
                       Text="Problem size stop">
                        <Label.IsVisible>
                            <MultiBinding Converter="{StaticResource MultipleProblemSizeConverter}">
                                <Binding Path="CustomProblemSizesAllowed"/>
                                <Binding Path="MultipleSizes"/>
                            </MultiBinding>
                        </Label.IsVisible>
                    </Label>
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Entry Grid.Row="6" Grid.Column="1"
                       Style="{StaticResource EntryStyle}"
                       Text="{Binding ProblemSizeStop}">
                        <Entry.IsVisible>
                            <MultiBinding Converter="{StaticResource MultipleProblemSizeConverter}">
                                <Binding Path="CustomProblemSizesAllowed"/>
                                <Binding Path="MultipleSizes"/>
                            </MultiBinding>
                        </Entry.IsVisible>
                    </Entry>
                </HorizontalStackLayout>
            </Grid>

            <!-- Problem size step -->
            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}"
                  IsVisible="{Binding CustomProblemSizesAllowed}">
                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                    <Label Grid.Row="6" Grid.Column="0"
                       Style="{StaticResource LabelStyle}"
                       Text="Problem size step">
                        <Label.IsVisible>
                            <MultiBinding Converter="{StaticResource MultipleProblemSizeConverter}">
                                <Binding Path="CustomProblemSizesAllowed"/>
                                <Binding Path="MultipleSizes"/>
                            </MultiBinding>
                        </Label.IsVisible>
                    </Label>
                </HorizontalStackLayout>
                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                    <Entry Grid.Row="6" Grid.Column="1"
                       Style="{StaticResource EntryStyle}"
                       Text="{Binding ProblemSizeStep}">
                        <Entry.IsVisible>
                            <MultiBinding Converter="{StaticResource MultipleProblemSizeConverter}">
                                <Binding Path="CustomProblemSizesAllowed"/>
                                <Binding Path="MultipleSizes"/>
                            </MultiBinding>
                        </Entry.IsVisible>
                    </Entry>
                </HorizontalStackLayout>
            </Grid>

            <view:ExpressionParameterListSetup Parameters="{Binding ProblemExpressionParameters}"
                                               IsVisible="{Binding ExpressionParamsExist}"/>
            <view:OptionParameterListSetup Parameters="{Binding ProblemOptionParameters}"
                                           IsVisible="{Binding OptionParamsExist}"/>

            <HorizontalStackLayout IsVisible="{Binding ProblemInformationName, Converter={StaticResource NotEmptyStringConverter}}"
                                   Margin="10,10,0,0">
                <Label Text="Name: "
                       FontSize="16"/>
                <Label Text="{Binding ProblemInformationName}"
                       FontSize="16"
                       Margin="5,0,0,0"/>
            </HorizontalStackLayout>
            <VerticalStackLayout IsVisible="{Binding ProblemInformationDescription, Converter={StaticResource NotEmptyStringConverter}}"
                                 Margin="10,5">
                <Label Text="{Binding ProblemInformationDescription}"
                       FontSize="Body"/>
            </VerticalStackLayout>

        </VerticalStackLayout>

        <!-- Optimizer setup -->
        <ScrollView Grid.Row="0" Grid.Column="1">
            <VerticalStackLayout Margin="10,0,10,0">
                <Label Text="Optimizers" Style="{StaticResource TitleLabel}"/>

                <ListView ItemsSource="{Binding Optimizers}"
                          SelectionMode="None"
                          IsVisible="{Binding AnyOptimizersExist}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell x:DataType="vm:OptimizerSetupVM">

                                <VerticalStackLayout Margin="-15,0,0,0">
                                    <Button Text="X"
                                            Style="{StaticResource RemoveButton}"
                                            Clicked="RemoveOptimizer"/>
                                    <VerticalStackLayout Margin="0,-34,0,0"> <!-- Super ugly, I know... -->

                                        <!-- Algorithm -->
                                        <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}">
                                            <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                                                <Label Style="{StaticResource LabelStyle}"
                                            Text="Algorithm"/>
                                            </HorizontalStackLayout>
                                            <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                                                <Picker ItemsSource="{Binding Source={RelativeSource AncestorType={x:Type vm:SetupVM}}, Path=PossibleAlgorithmNames}"
                                            SelectedItem="{Binding Algorithm}" />
                                            </HorizontalStackLayout>
                                        </Grid>

                                        <!-- Random seed switch -->
                                        <Grid HorizontalOptions="Fill" RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}">
                                            <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}"
                                                                HorizontalOptions="Fill">
                                                <Label Style="{StaticResource LabelStyle}"
                                            Text="Custom seed"/>
                                            </HorizontalStackLayout>
                                            <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                                                <Switch IsToggled="{Binding CustomSeed}"/>
                                            </HorizontalStackLayout>
                                        </Grid>

                                        <!-- Seed entry -->
                                        <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}"
                                        IsVisible="{Binding CustomSeed}">
                                            <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                                                <Label Style="{StaticResource LabelStyle}"
                                            Text="Seed value"/>
                                            </HorizontalStackLayout>
                                            <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                                                <Entry Text="{Binding Seed}"/>
                                            </HorizontalStackLayout>
                                        </Grid>

                                        <view:ExpressionParameterListSetup Parameters="{Binding Parameters}"
                                                                        IsVisible="{Binding ParametersExist}"/>

                                        <BoxView Style="{StaticResource Line}" />

                                    </VerticalStackLayout>
                                </VerticalStackLayout>


                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Button Text="+"
                    Style="{StaticResource AddButton}"
                    Clicked="AddOptimizer"/>

            </VerticalStackLayout>
        </ScrollView>

        <!-- Termination setup -->
        <ScrollView Grid.Row="0" Grid.Column="2">

            <VerticalStackLayout>
                <Button Text="Run" Clicked="Run" Style="{StaticResource RunButton}" ZIndex="1"/>
                <VerticalStackLayout Margin="0,-40,0,0">

                    <Label Text="Termination criteria" Style="{StaticResource TitleLabel}"/>

                    <ListView ItemsSource="{Binding Terminations}"
                              SelectionMode="None"
                              IsVisible="{Binding AnyTerminationsExist}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell x:DataType="vm:TerminationSetupVM">

                                    <VerticalStackLayout Margin="-15,0,0,0">
                                        <Button Text="X"
                                                Style="{StaticResource RemoveButton}"
                                                Clicked="RemoveTermination"/>
                                        <VerticalStackLayout Margin="0,-34,0,0">
                                            <!-- Super ugly, I know... -->

                                            <!-- Type -->
                                            <Grid RowDefinitions="{StaticResource RowDef}" ColumnDefinitions="{StaticResource ColsDef}">
                                                <HorizontalStackLayout Grid.Column="0" Style="{StaticResource LeftCol}">
                                                    <Label Style="{StaticResource LabelStyle}"
                                                Text="Type"/>
                                                </HorizontalStackLayout>
                                                <HorizontalStackLayout Grid.Column="1" Style="{StaticResource RightCol}">
                                                    <Picker ItemsSource="{Binding Source={RelativeSource AncestorType={x:Type vm:SetupVM}}, Path=PossibleTerminationNames}"
                                                            SelectedItem="{Binding Name}" />
                                                </HorizontalStackLayout>
                                            </Grid>

                                            <view:ExpressionParameterListSetup Parameters="{Binding Parameters}"
                                                                               IsVisible="{Binding ParametersExist}"/>

                                            <BoxView Style="{StaticResource Line}" />

                                        </VerticalStackLayout>
                                    </VerticalStackLayout>


                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Button Text="+"
                        Style="{StaticResource AddButton}"
                        Clicked="AddTerminationCriterion"/>

                </VerticalStackLayout>
            </VerticalStackLayout>

        </ScrollView>

    </Grid>

</ContentPage>
